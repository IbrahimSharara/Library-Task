// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace Libirary.DAL.Models
{
    public partial class librarySystemContext : DbContext
    {
        public librarySystemContext()
        {
        }

        public librarySystemContext(DbContextOptions<librarySystemContext> options)
            : base(options)
        {
        }

        public virtual DbSet<TblBook> TblBook { get; set; }
        public virtual DbSet<TblBorrow> TblBorrow { get; set; }
        public virtual DbSet<TblCategory> TblCategory { get; set; }
        public virtual DbSet<TblWriter> TblWriter { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
                optionsBuilder.UseSqlServer("Data Source=.\\sql2019;Initial Catalog=librarySystem;Persist Security Info=True;User ID=sa;Password=P@ssw0rd");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<TblBook>(entity =>
            {
                entity.HasOne(d => d.BookCategoryNavigation)
                    .WithMany(p => p.TblBook)
                    .HasForeignKey(d => d.BookCategory)
                    .HasConstraintName("FK_tbl_Book_tbl_Category");

                entity.HasOne(d => d.BookWriterNavigation)
                    .WithMany(p => p.TblBook)
                    .HasForeignKey(d => d.BookWriter)
                    .HasConstraintName("FK_tbl_Book_tbl_Writer");
            });

            modelBuilder.Entity<TblBorrow>(entity =>
            {
                entity.HasOne(d => d.Book)
                    .WithMany(p => p.TblBorrow)
                    .HasForeignKey(d => d.BookId)
                    .HasConstraintName("FK_tbl_Borrow_tbl_Book");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}